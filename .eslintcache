[{"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/AppHeader.tsx":"1","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/style.ts":"2","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/stories/Grid.stories.tsx":"3","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/stories/AppHeader.stories.tsx":"4","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/Grid.tsx":"5","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/stories/Board.stories.tsx":"6","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/Board.tsx":"7","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/reportWebVitals.ts":"8","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/hooks/useGameData.ts":"9","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/App.tsx":"10","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/index.tsx":"11","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/SideBar.tsx":"12","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/ColorPalette.tsx":"13","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/ColorPaletteGrid.tsx":"14","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/hooks/useColors.ts":"15"},{"size":610,"mtime":1606926405286,"results":"16","hashOfConfig":"17"},{"size":1215,"mtime":1606926470543,"results":"18","hashOfConfig":"17"},{"size":730,"mtime":1606909895211,"results":"19","hashOfConfig":"17"},{"size":375,"mtime":1606827770070,"results":"20","hashOfConfig":"17"},{"size":1095,"mtime":1606922819190,"results":"21","hashOfConfig":"17"},{"size":879,"mtime":1606910912825,"results":"22","hashOfConfig":"17"},{"size":1945,"mtime":1606924590513,"results":"23","hashOfConfig":"17"},{"size":425,"mtime":1606645356357,"results":"24","hashOfConfig":"17"},{"size":1480,"mtime":1606911602760,"results":"25","hashOfConfig":"17"},{"size":1096,"mtime":1606924075346,"results":"26","hashOfConfig":"17"},{"size":548,"mtime":1606673152557,"results":"27","hashOfConfig":"17"},{"size":204,"mtime":1606925155765,"results":"28","hashOfConfig":"17"},{"size":1695,"mtime":1606933721425,"results":"29","hashOfConfig":"17"},{"size":969,"mtime":1606934677880,"results":"30","hashOfConfig":"17"},{"size":419,"mtime":1606930998140,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gexn5o",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/AppHeader.tsx",[],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/style.ts",[],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/stories/Grid.stories.tsx",[],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/stories/AppHeader.stories.tsx",[],["69","70","71","72","73"],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/Grid.tsx",["74"],"import React from 'react';\nimport styled from 'styled-components';\nimport { cssVars } from '../style';\n\nexport type Props = {\n  index: number;\n  color: string;\n  isActive: boolean;\n  onClickGrid: (index: number) => void;\n};\nconst Grid: React.FC<Props> = (props: Props) => {\n  const { color, index, onClickGrid, isActive } = props;\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (isActive) {\n      onClickGrid(index);\n    }\n  };\n  const handleClick = () => {\n    onClickGrid(index);\n  };\n\n  return (\n    <StyledDiv>\n      <StyledInner\n        color={color}\n        onClick={handleClick}\n        onMouseEnter={handleMouseMove}\n      />\n    </StyledDiv>\n  );\n};\nexport default Grid;\nconst StyledDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  border: solid 1px;\n  position: relative;\n  border-color: ${cssVars.embossShadow} ${cssVars.embossLight}\n    ${cssVars.embossLight} ${cssVars.embossShadow};\n  box-sizing: border-box;\n`;\nconst StyledInner = styled.div<{ color: string }>`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  background-color: ${(props) => props.color};\n`;\n",["75","76","77","78","79"],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/stories/Board.stories.tsx",["80"],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/Board.tsx",["81","82","83"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { GameData, GridData } from '../interfaces';\nimport { cssVars } from '../style';\nimport Grid from './Grid';\n\nexport type Props = GameData & {\n  onClickGrid: (index: number, color: string) => void;\n};\nconst Board: React.FC<Props> = (props: Props) => {\n  const { rows, cols, grids } = props;\n  const [isMouseDown, setIsMouseDown] = useState(false);\n\n  const handleClick = (data: GridData) => {\n    const color = data.color !== 'white' ? 'white' : 'blue';\n    props.onClickGrid(data.index, color);\n  };\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (!isMouseDown) {\n      setIsMouseDown(true);\n    }\n  };\n  const handleMouseUp = () => {\n    setIsMouseDown(false);\n  };\n  return (\n    <StyledContainer\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseUp}\n      onMouseDown={handleMouseDown}\n    >\n      {grids.map((data) => (\n        <StyledGrid cols={cols} rows={rows} key={data.index}>\n          <Grid\n            {...data}\n            isActive={isMouseDown}\n            onClickGrid={() => handleClick(data)}\n          />\n        </StyledGrid>\n      ))}\n    </StyledContainer>\n  );\n};\nexport default Board;\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  --size: min(100vw, 100vh);\n  width: var(--size);\n  height: var(--size);\n  padding: 4px;\n  border: solid 1px;\n  border-color: ${cssVars.embossLight} ${cssVars.embossShadow}\n    ${cssVars.embossShadow} ${cssVars.embossLight};\n  margin: 0 auto;\n  user-select: none;\n  box-sizing: border-box;\n`;\n\ninterface StyledGridProps {\n  cols: number;\n  rows: number;\n}\nconst StyledGrid = styled.div<StyledGridProps>`\n  border-width: 1px;\n  overflow: hidden;\n  box-sizing: border-box;\n  padding: 1px;\n  ${(props) => `\n        width: calc((100% - 1px) / ${props.cols});\n        height: calc((100% - 1px) / ${props.rows});\n    `}\n`;\n","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/reportWebVitals.ts",["84"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/hooks/useGameData.ts",["85"],"import { useEffect, useState } from 'react';\nimport { GameData, GridData } from '../interfaces';\n\ntype ReturnType = {\n  grids: GridData[];\n  cols: number;\n  rows: number;\n  handleClickGrid: (index: number, color: string) => void;\n};\nexport const useGameData = (socket: SocketIOClient.Socket): ReturnType => {\n  const [gameData, setGameData] = useState<GameData>();\n\n  const updateGrid = (jsonString: string) => {\n    const grid = JSON.parse(jsonString);\n    const grids = gameData?.grids;\n\n    if (grids && grids[grid.index]) {\n      grids[grid.index] = grid;\n      const newData: GameData = {\n        ...gameData,\n        grids: grids.concat(),\n      } as GameData;\n\n      setGameData(newData);\n    }\n  };\n  useEffect(() => {\n    socket.off('color');\n    socket.on('color', (message: string) => {\n      updateGrid(message);\n    });\n  }, [gameData]);\n\n  useEffect(() => {\n    socket.on('init', (serverMessage: string) => {\n      socket.off('init');\n      const initialGameData = JSON.parse(serverMessage);\n      setGameData(initialGameData);\n    });\n    return () => {\n      socket.off('init');\n      socket.off('color');\n    };\n  }, []);\n\n  const handleClickGrid = (index: number, color: string) => {\n    const params = JSON.stringify({ index, color });\n    console.log(params);\n    socket.emit('color', params);\n  };\n\n  const state = {\n    grids: gameData?.grids || [],\n    cols: gameData?.cols || 0,\n    rows: gameData?.rows || 0,\n    handleClickGrid,\n  };\n\n  return state;\n};\n","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/App.tsx",[],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/index.tsx",[],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/SideBar.tsx",[],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/ColorPalette.tsx",["86","87"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { cssVars } from '../style';\nimport { useColors } from '../hooks/useColors';\nimport ColorPaletteGrid from './ColorPaletteGrid';\n\nconst ColorPalette: React.FC = () => {\n  const [index, setIndex] = useState(0);\n  const handleClick = (clickedIndex: number) => {\n    console.log('handleClick', `${index} => ${clickedIndex}`);\n    setIndex(clickedIndex);\n  };\n  const [cols] = useState(10);\n  const [rows] = useState(10);\n  useEffect(() => {\n    console.log('useEffect');\n  }, [cols]);\n\n  const colors: string[] = useColors(cols, rows);\n  return (\n    <div>\n      <StyledTitle>COLOR</StyledTitle>\n      <StyledContainer>\n        {colors.map((color, i) => {\n          return (\n            <StyledGrid cols={cols} key={color}>\n              <ColorPaletteGrid\n                color={color}\n                index={i}\n                isSelected={i === index}\n                onClickGrid={handleClick}\n              />\n            </StyledGrid>\n          );\n        })}\n      </StyledContainer>\n    </div>\n  );\n};\nexport default ColorPalette;\n\nconst StyledTitle = styled.h2`\n  border-bottom: ${cssVars.border};\n  height: 32px;\n  font-size: ${cssVars.fontSize_S};\n  display: flex;\n  align-items: center;\n  background-color: #331d33;\n  padding-left: ${cssVars.fontSize_S};\n`;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: rows;\n  flex-wrap: wrap;\n  padding: 8px;\n`;\n\nconst StyledGrid = styled.div<{\n  cols: number;\n}>`\n  width: ${(props) => `calc(100% / ${props.cols})`};\n  height: 20px;\n  position: relative;\n  border-color: white;\n  border-width: 2px;\n  box-sizing: border-box;\n`;\n","/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/components/ColorPaletteGrid.tsx",[],"/Users/abe_takuya/Documents/works/repositries/private/pixel-art-editor/src/hooks/useColors.ts",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":13,"column":28,"nodeType":"100","messageId":"101","endLine":13,"endColumn":47},{"ruleId":"88","replacedBy":"102"},{"ruleId":"90","replacedBy":"103"},{"ruleId":"92","replacedBy":"104"},{"ruleId":"94","replacedBy":"105"},{"ruleId":"96","replacedBy":"106"},{"ruleId":"107","severity":2,"message":"108","line":28,"column":28,"nodeType":"109","messageId":"110","endLine":28,"endColumn":30},{"ruleId":"98","severity":1,"message":"111","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":18,"column":28,"nodeType":"100","messageId":"101","endLine":18,"endColumn":47},{"ruleId":"98","severity":1,"message":"112","line":61,"column":11,"nodeType":"100","messageId":"101","endLine":61,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":3,"column":25,"nodeType":"109","messageId":"115","endLine":3,"endColumn":57},{"ruleId":"116","severity":1,"message":"117","line":48,"column":5,"nodeType":"118","messageId":"110","endLine":48,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":10,"column":5,"nodeType":"118","messageId":"110","endLine":10,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":16,"column":5,"nodeType":"118","messageId":"110","endLine":16,"endColumn":16},"lines-around-directive",["119"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'e' is defined but never used.","Identifier","unusedVar",["119"],[],[],[],[],"@typescript-eslint/no-empty-function","Unexpected empty arrow function.","ArrowFunctionExpression","unexpected","'useEffect' is defined but never used.","'StyledGridProps' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","missingReturnType","no-console","Unexpected console statement.","MemberExpression","padding-line-between-statements"]